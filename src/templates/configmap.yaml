apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "nussknacker.fullname" . }}
  labels:
    {{- include "nussknacker.labels" . | nindent 4 }}
data:
  application.conf: |-
    base: { include "/opt/nussknacker/conf/base-application.conf" }

    base.flinkEngineConfig.restUrl: "http://{{ .Release.Name }}-flink-jobmanager-rest:8081"
    base.flinkEngineConfig.queryableStateProxyUrl: "{{ .Release.Name }}-flink-taskmanager:6122"
        base.streamingModelConfig.kafka {
      kafkaAddress: "{{ .Release.Name }}-kafka:9092"
      kafkaProperties {
        "schema.registry.url": "http://{{ .Release.Name }}-schema-registry:8081"
      }
    }
    {{- with .Values.db }}
    base.db: {{ tpl (toJson .) $ }}
    {{- end }}
    base.jdbcServer.enabled: false
    base.schemaRegistryUrl: "http://{{ .Release.Name }}-schema-registry:8081"

    environment: "demo"

    categoriesConfig {
      "Default": "hermes-model"
    }

    processTypes {
      "hermes-model": {
          engineConfig: ${base.flinkEngineConfig}
          modelConfig: {
            classPath: ["model/hermesModel.jar"]
            {{- if .Values.hermes.kafka.namespace }}
            namespace: {{ tpl .Values.hermes.kafka.namespace . }}
            {{- end }}
          } ${base.streamingModelConfig}
        }
    }

    environmentAlert: {
      content: "KUBERNETES ENVIRONMENT"
      cssClass: "indicator-green"
    }

    metricsSettings: {
      url: ${base.grafanaUrl}"/dashboard/db/$dashboard?theme=dark&var-processName=$process&var-env="${environment}
      defaultDashboard: "flink-esp"
      processingTypeToDashboard: {
        "hermes-model": "flink-esp"
      }
    }


    # TODO: lightbend config can't include files on root level - move nussknacker config on nk level and get rid of this below
    jdbcServer: ${base.jdbcServer}
    db: ${base.db}
    akka: ${base.akka}
    authentication: ${base.authentication}

    commentSettings: ${base.commentSettings}
    attachmentsPath: ${base.attachmentsPath}
    countsSettings: ${base.countsSettings}
    kibanaSettings: ${base.kibanaSettings}

    {{- if .Values.openapi }}
    base.streamingModelConfig.openapi: [{
      url: "{{ .Values.openapi.url }}"
      {{- if .Values.openapi.apikey }}
      security: {
        apikey: {
          type: "apiKey"
          apiKeyValue: "{{ .Values.openapi.apikey }}"
        }
      }
      {{- end }}
    }]
    {{- end }}

    customTabs: [{
      name: "Hermes"
      url: "{{ include "hermes.management.svcExternalUrl" (dict "Chart" (dict "Name" "hermes") "Values" .Values.hermes "Release" .Release "Capabilities" .Capabilities) }}"
      id: "hermes"
    }]