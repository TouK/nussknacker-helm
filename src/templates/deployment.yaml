apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nussknacker.fullname" . }}
  labels:
    {{- include "nussknacker.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "nussknacker.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      labels:
        {{- include "nussknacker.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "nussknacker.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
            - name: config
              mountPath: /etc/nussknacker
            {{- if .Values.persistence.enabled }}
            - name: storage
              mountPath: /opt/nussknacker/storage
              subPath: {{ .Values.persistence.subPath }}
            {{- end }}
          env:
            #TODO: make it default in NK
            - name: JDK_JAVA_OPTIONS
              value: -Dconfig.override_with_env_vars=true
            - name: CONFIG_FILE
              value: {{ .Values.nussknacker.configFile }}
            - name: HELM_RELEASE_NAME
              value: {{ .Release.Name }}
            {{- if .Values.postgresql.enabled }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: '{{- include "postgresql.secretName" .Subcharts.postgresql }}'
                  key: postgresql-password
            {{- end -}}
            {{- if .Values.extraEnv -}}
              {{- .Values.extraEnv | toYaml | nindent 12 -}}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "nussknacker.fullname" . }}
        - name: storage
        {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "nussknacker.fullname" .) }}
        {{- else }}
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
