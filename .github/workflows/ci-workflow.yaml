name: Nussknacker helm CI

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  CHART_SRC_DIR: ./src
  XDG_CACHE_HOME: $GITHUB_WORKSPACE/.cache/
  CHARTS_PUBLIC_RELEASES_URL: "https://helm-charts.touk.pl/public/"
  RELEASE_NAME: nu-helm-release-${{github.run_id}}

defaults:
  run:
    shell: bash

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.setVersion.outputs.version }}    
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: setVersion
        id: setVersion
        run: echo "::set-output name=version::$(helm show chart ${{env.CHART_SRC_DIR}} | grep ^version | sed -e "s/.*:\ //;s/SNAPSHOT/SNAPSHOT.${{github.run_id}}/")"
      - name: buildAll
        run: ./setup.sh
      - name: packageAll
        run: helm package ${{env.CHART_SRC_DIR}} -d dist --version "${{steps.setVersion.outputs.version}}"
      - name: Store target
        uses: actions/upload-artifact@v2
        with:
          name: helm-build
          path: "dist/nussknacker-${{steps.setVersion.outputs.version}}.tgz"  
  test-flink:
    name: test flink mode
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: helm-build
          path: dist
      - uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: "k3s-default"
          args: >-
            --config=.k3d/single-cluster.yml
            --trace
      - name: helmUpgrade
        run: helm upgrade -i "${{env.RELEASE_NAME}}" dist/*.tgz --version "${{needs.build.outputs.version}}" -f deploy-values.yaml
  test-streaming-lite:
    name: test streaming-lite mode
    runs-on: ubuntu-latest
    needs: [ build ]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: helm-build
          path: dist
      - uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: "k3s-default"
          args: >-
            --config=.k3d/single-cluster.yml
            --trace
      - name: helmUpgrade
        run: helm upgrade -i "${{env.RELEASE_NAME}}" dist/*.tgz --version "${{needs.build.outputs.version}}" -f deploy-values.yaml -f deploy-values-lite.yaml
